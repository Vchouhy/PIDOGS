{"ast":null,"code":"var _jsxFileName = \"/Users/victoriachouhy/Desktop/HENRY/PI-Dogs-main/client/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\n//eslint-disable-next-line\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllDogs } from '../actions';\nimport { Link } from 'react-router-dom';\nimport Card from \"./Card\";\nimport Pagination from \"./Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch(); // pasar a archivo nuevo\n\n  const allDogs = useSelector(state => state.dogs); //lo mismo que mapStateToProps - trae todo lo de actions\n\n  const [currentPage, setCurrentPage] = useState(1); // Local State save in a local state the current page (set to 1 bc is where we are rn)\n\n  const [dogsPerPage, setDogsPerPage] = useState(8); // Local State set the amount of dogs required per page\n\n  const indexOfLastDog = currentPage * dogsPerPage; // 8 - local state. set the index of last dog - on the current pag * the amount of dogs p/page i need to know the last index of each card\n\n  const indexOfFirstDog = indexOfLastDog - dogsPerPage; // 0 set the index of the first dog p/page\n\n  const currentDog = allDogs.slice(indexOfFirstDog, indexOfLastDog); // va del 0 al 6 - this const saves which card needs to render in each page\n\n  const pagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    dispatch(getAllDogs());\n  }, [dispatch]);\n\n  function handleClick(event) {\n    event.preventDefault();\n    dispatch(getAllDogs());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dogs\",\n      children: \"Create a new dog!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"veamos que onda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        handleClick(e);\n      },\n      children: \"Reload all dogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"existent\",\n          children: \"Api Breeds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created\",\n          children: \"Created Breeds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all breeds\",\n          children: \"All Breeds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"temperament\",\n          children: \"Temperament\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weight\",\n          children: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ascendent\",\n          children: \"Ascendent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"descendent\",\n          children: \"Descendent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        dogsPerPage: dogsPerPage // props that needs the component to render properly\n        ,\n        allDogs: allDogs.length,\n        pagination: pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), currentDog === null || currentDog === void 0 ? void 0 : currentDog.map(dog => {\n        return /*#__PURE__*/_jsxDEV(\"fragment\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/home/' + dog.id,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: dog.name,\n              temperament: dog.temperament,\n              weight: dog.weight,\n              image: dog.image\n            }, dog.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"40rb8F4QlBle8z4TDdFnyWH5nP8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/victoriachouhy/Desktop/HENRY/PI-Dogs-main/client/src/components/Home.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getAllDogs","Link","Card","Pagination","Home","dispatch","allDogs","state","dogs","currentPage","setCurrentPage","dogsPerPage","setDogsPerPage","indexOfLastDog","indexOfFirstDog","currentDog","slice","pagination","pageNumber","handleClick","event","preventDefault","e","length","map","dog","id","name","temperament","weight","image"],"mappings":"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","sourcesContent":["//eslint-disable-next-line\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector} from 'react-redux';\nimport { getAllDogs } from '../actions';\nimport { Link } from 'react-router-dom'\nimport Card from \"./Card\";\nimport Pagination from \"./Pagination\";\n\nexport default function Home(){\n    const dispatch = useDispatch(); // pasar a archivo nuevo\n    const allDogs = useSelector((state) => state.dogs) //lo mismo que mapStateToProps - trae todo lo de actions\n\n    const [currentPage, setCurrentPage] = useState(1) // Local State save in a local state the current page (set to 1 bc is where we are rn)\n    const [dogsPerPage, setDogsPerPage] = useState(8) // Local State set the amount of dogs required per page\n    const indexOfLastDog = currentPage * dogsPerPage // 8 - local state. set the index of last dog - on the current pag * the amount of dogs p/page i need to know the last index of each card\n    const indexOfFirstDog = indexOfLastDog - dogsPerPage // 0 set the index of the first dog p/page\n    const currentDog = allDogs.slice(indexOfFirstDog, indexOfLastDog) // va del 0 al 6 - this const saves which card needs to render in each page\n\n    const pagination = (pageNumber)=>{\n        setCurrentPage(pageNumber)\n    }\n\n    useEffect(()=>{\n        dispatch(getAllDogs());\n    },[dispatch])\n\n    function handleClick(event){\n        event.preventDefault();\n        dispatch(getAllDogs());\n    }\n\n    return(\n        <div>\n            <Link to = '/dogs'>Create a new dog!</Link>\n            <h1>veamos que onda</h1>\n            <button onClick = {e=>{handleClick(e)}}>\n                Reload all dogs\n            </button>\n            <div> \n                <select>\n                    <option value = 'existent'>Api Breeds</option>\n                    <option value = 'created'>Created Breeds</option>\n                    <option value = 'all breeds'>All Breeds</option> \n                    <option value = 'temperament'>Temperament</option>\n                    <option value = 'weight'>Weight</option>\n\n                </select>\n                <select>\n                    <option value = 'ascendent'>Ascendent</option>\n                    <option value = 'descendent'>Descendent</option>\n                </select>\n                <Pagination dogsPerPage = {dogsPerPage} // props that needs the component to render properly\n                            allDogs = {allDogs.length}\n                            pagination = {pagination}\n                />\n                \n                {currentDog?.map(dog=>{\n                        return(\n                        <fragment>\n                        <Link to={'/home/' + dog.id}>\n                        <Card name = {dog.name} \n                              temperament = {dog.temperament} \n                              weight = {dog.weight} \n                              image = {dog.image} \n                              key = {dog.id}\n                        />\n                        </Link>\n                        </fragment>\n                    )})\n                }\n            </div>\n        </div>\n    )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}